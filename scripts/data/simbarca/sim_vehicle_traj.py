""" This script generates and runs the command to simulate the vehicle trajectories in Aimsun.
    Before using this script, you need to generate the simulation settings using gen_exp_settings.py, 
    and add the Aimsun_API.py in the API tab of Aimsun's scenario settings.
    
    This script is supposed to be executed from under the root folder of the project, i.e.,
        python scripts/data/simbarca/sim_vehicle_traj.py
"""
import os
import glob
import shutil
import subprocess
import multiprocessing as mp 

######################################################
# 1. Run simulation in Aimsun
######################################################

# path to the aimsun console executable
executable = "/opt/Aimsun_Next_22/aconsole"
# the network model, should add `Aimsun_API.py` in the API tab of the scenario settings
project = "/home/weijiang/Downloads/Eixample_BASE_v7.ang"
# the replication id to execute
rep_id = "10607425"
# the folders generated by gen_exp_settings.py
folder_pattern = "datasets/simbarca/session_*"

def sim_one_folder(folder, cleanup=True):
    
    project_copy_path = "{}/{}".format(folder, "project_copy.ang")
    # copy the original file to a new one, because Aimsun will lock the file upon execution
    shutil.copyfile(project, project_copy_path)
    command = "cd {} && {} --project {} --command execute --target {} --force_number_of_threads 16 --log_file {}/aimsun_log.log".format(
        folder, executable, project_copy_path, rep_id, folder)
    print("Process {} is executing command \n {}".format(os.getpid(), command))
    subprocess.run(command, shell=True)
    
    ######################################################
    # 2. Extract traffic statistics per time step 
    ######################################################
    
    stats_cmd = "python scripts/data/simbarca/time_series_from_traj.py --metadata_folder datasets/simbarca/metadata --session_folder {}".format(folder)
    print("Executing command: \n {}".format(stats_cmd))
    subprocess.run(stats_cmd, shell=True)
    
    ######################################################
    # 3. Aggregate raw statistics into different intervals
    ######################################################
    
    sample_cmd = "python scripts/data/simbarca/extract_samples.py --session {}".format(folder)
    print("Executing command: \n {}".format(sample_cmd))
    subprocess.run(sample_cmd, shell=True)
    
    ######################################################
    # 4. delete the raw simulation files, keep processed
    ######################################################
    if not cleanup: # set cleanup to False if you want to keep the raw trajectory files
        return
    clear_cmd = "rm {}/trajectory/*.json".format(folder)
    print("Executing command: \n {}".format(clear_cmd))
    subprocess.run(clear_cmd, shell=True)
    
all_folders = sorted(glob.glob(folder_pattern))
folders_to_sim = [os.path.abspath(folder) for folder in all_folders 
                  if not os.path.exists("{}/aimsun_log.log".format(folder))]

if __name__ == '__main__':
    
    with mp.Pool(processes=8) as pool:
        pool.map(sim_one_folder, folders_to_sim)
        
    print("All simulations are done!")
